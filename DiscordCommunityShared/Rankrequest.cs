// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rankrequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from rankrequest.proto</summary>
public static partial class RankrequestReflection {

  #region Descriptor
  /// <summary>File descriptor for rankrequest.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static RankrequestReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFyYW5rcmVxdWVzdC5wcm90byJ9CgtSYW5rUmVxdWVzdBIQCghzdGVhbV9p",
          "ZBgBIAEoCRIVCg1yZXF1ZXN0ZWRSYW5rGAIgASgFEh0KFWlzX2luaXRpYWxf",
          "YXNzaWdubWVudBgDIAEoCBIWCg5vc3Rfc2NvcmVfbGlzdBgEIAEoCRIOCgZz",
          "aWduZWQYBSABKAliBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RankRequest), global::RankRequest.Parser, new[]{ "SteamId", "RequestedRank", "IsInitialAssignment", "OstScoreList", "Signed" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class RankRequest : pb::IMessage<RankRequest> {
  private static readonly pb::MessageParser<RankRequest> _parser = new pb::MessageParser<RankRequest>(() => new RankRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RankRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RankrequestReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RankRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RankRequest(RankRequest other) : this() {
    steamId_ = other.steamId_;
    requestedRank_ = other.requestedRank_;
    isInitialAssignment_ = other.isInitialAssignment_;
    ostScoreList_ = other.ostScoreList_;
    signed_ = other.signed_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RankRequest Clone() {
    return new RankRequest(this);
  }

  /// <summary>Field number for the "steam_id" field.</summary>
  public const int SteamIdFieldNumber = 1;
  private string steamId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string SteamId {
    get { return steamId_; }
    set {
      steamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "requestedRank" field.</summary>
  public const int RequestedRankFieldNumber = 2;
  private int requestedRank_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RequestedRank {
    get { return requestedRank_; }
    set {
      requestedRank_ = value;
    }
  }

  /// <summary>Field number for the "is_initial_assignment" field.</summary>
  public const int IsInitialAssignmentFieldNumber = 3;
  private bool isInitialAssignment_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsInitialAssignment {
    get { return isInitialAssignment_; }
    set {
      isInitialAssignment_ = value;
    }
  }

  /// <summary>Field number for the "ost_score_list" field.</summary>
  public const int OstScoreListFieldNumber = 4;
  private string ostScoreList_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string OstScoreList {
    get { return ostScoreList_; }
    set {
      ostScoreList_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "signed" field.</summary>
  public const int SignedFieldNumber = 5;
  private string signed_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Signed {
    get { return signed_; }
    set {
      signed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RankRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RankRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (SteamId != other.SteamId) return false;
    if (RequestedRank != other.RequestedRank) return false;
    if (IsInitialAssignment != other.IsInitialAssignment) return false;
    if (OstScoreList != other.OstScoreList) return false;
    if (Signed != other.Signed) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (SteamId.Length != 0) hash ^= SteamId.GetHashCode();
    if (RequestedRank != 0) hash ^= RequestedRank.GetHashCode();
    if (IsInitialAssignment != false) hash ^= IsInitialAssignment.GetHashCode();
    if (OstScoreList.Length != 0) hash ^= OstScoreList.GetHashCode();
    if (Signed.Length != 0) hash ^= Signed.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (SteamId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(SteamId);
    }
    if (RequestedRank != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(RequestedRank);
    }
    if (IsInitialAssignment != false) {
      output.WriteRawTag(24);
      output.WriteBool(IsInitialAssignment);
    }
    if (OstScoreList.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(OstScoreList);
    }
    if (Signed.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(Signed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (SteamId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SteamId);
    }
    if (RequestedRank != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequestedRank);
    }
    if (IsInitialAssignment != false) {
      size += 1 + 1;
    }
    if (OstScoreList.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OstScoreList);
    }
    if (Signed.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Signed);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RankRequest other) {
    if (other == null) {
      return;
    }
    if (other.SteamId.Length != 0) {
      SteamId = other.SteamId;
    }
    if (other.RequestedRank != 0) {
      RequestedRank = other.RequestedRank;
    }
    if (other.IsInitialAssignment != false) {
      IsInitialAssignment = other.IsInitialAssignment;
    }
    if (other.OstScoreList.Length != 0) {
      OstScoreList = other.OstScoreList;
    }
    if (other.Signed.Length != 0) {
      Signed = other.Signed;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          SteamId = input.ReadString();
          break;
        }
        case 16: {
          RequestedRank = input.ReadInt32();
          break;
        }
        case 24: {
          IsInitialAssignment = input.ReadBool();
          break;
        }
        case 34: {
          OstScoreList = input.ReadString();
          break;
        }
        case 42: {
          Signed = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
