// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: vote.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from vote.proto</summary>
public static partial class VoteReflection {

  #region Descriptor
  /// <summary>File descriptor for vote.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static VoteReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cgp2b3RlLnByb3RvIkoKBFZvdGUSDwoHdXNlcl9pZBgBIAEoCRIQCghjYXRl",
          "Z29yeRgCIAEoBRIPCgdpdGVtX2lkGAMgASgJEg4KBnNpZ25lZBgEIAEoCWIG",
          "cHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Vote), global::Vote.Parser, new[]{ "UserId", "Category", "ItemId", "Signed" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Vote : pb::IMessage<Vote> {
  private static readonly pb::MessageParser<Vote> _parser = new pb::MessageParser<Vote>(() => new Vote());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Vote> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::VoteReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vote() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vote(Vote other) : this() {
    userId_ = other.userId_;
    category_ = other.category_;
    itemId_ = other.itemId_;
    signed_ = other.signed_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Vote Clone() {
    return new Vote(this);
  }

  /// <summary>Field number for the "user_id" field.</summary>
  public const int UserIdFieldNumber = 1;
  private string userId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserId {
    get { return userId_; }
    set {
      userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "category" field.</summary>
  public const int CategoryFieldNumber = 2;
  private int category_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Category {
    get { return category_; }
    set {
      category_ = value;
    }
  }

  /// <summary>Field number for the "item_id" field.</summary>
  public const int ItemIdFieldNumber = 3;
  private string itemId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ItemId {
    get { return itemId_; }
    set {
      itemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "signed" field.</summary>
  public const int SignedFieldNumber = 4;
  private string signed_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Signed {
    get { return signed_; }
    set {
      signed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Vote);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Vote other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (UserId != other.UserId) return false;
    if (Category != other.Category) return false;
    if (ItemId != other.ItemId) return false;
    if (Signed != other.Signed) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (UserId.Length != 0) hash ^= UserId.GetHashCode();
    if (Category != 0) hash ^= Category.GetHashCode();
    if (ItemId.Length != 0) hash ^= ItemId.GetHashCode();
    if (Signed.Length != 0) hash ^= Signed.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (UserId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(UserId);
    }
    if (Category != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Category);
    }
    if (ItemId.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ItemId);
    }
    if (Signed.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Signed);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (UserId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
    }
    if (Category != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Category);
    }
    if (ItemId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemId);
    }
    if (Signed.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Signed);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Vote other) {
    if (other == null) {
      return;
    }
    if (other.UserId.Length != 0) {
      UserId = other.UserId;
    }
    if (other.Category != 0) {
      Category = other.Category;
    }
    if (other.ItemId.Length != 0) {
      ItemId = other.ItemId;
    }
    if (other.Signed.Length != 0) {
      Signed = other.Signed;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          UserId = input.ReadString();
          break;
        }
        case 16: {
          Category = input.ReadInt32();
          break;
        }
        case 26: {
          ItemId = input.ReadString();
          break;
        }
        case 34: {
          Signed = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
